name: Build and Push Server Docker Image

on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - 'apps/server/**'
      - '.github/workflows/docker-build.yml'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - 'package.json'
      - 'tsconfig.json'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'apps/server/package.json' # Use Node version from server's package.json

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest # Or specify a pnpm version if needed
          run_install: false # We will run install manually later if needed, Docker build handles it

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/react-router-nest-server # Adjust image name if needed
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Build context is the root of the monorepo
          file: ./apps/server/Dockerfile # Path to the Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
