name: Reusable Docker Build Workflow

on:
  workflow_call:
    inputs:
      push:
        description: 'Whether to push the Docker image'
        required: false
        type: boolean
        default: false
      tag-version:
        description: 'The version to tag the Docker image with'
        required: true
        type: string
      is-release:
        description: 'Whether this is a release build'
        required: false
        type: boolean
        default: false
      include-latest:
        description: 'Whether to also tag with latest'
        required: false
        type: boolean
        default: false
      registry:
        description: 'Docker registry to use'
        required: false
        type: string
        default: 'ghcr.io'
      image-name:
        description: 'Name of the Docker image'
        required: false
        type: string
        default: 'cbnsndwch/react-router-nest-server'

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: inputs.push == true
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ inputs.tag-version }}
            type=raw,value=latest,enable=${{ inputs.include-latest }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: apps/server
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
