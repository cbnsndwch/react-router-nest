name: Reusable Docker Build Workflow

on:
  workflow_call:
    inputs:
      push:
        description: 'Whether to push the Docker image'
        type: boolean
        required: false
        default: false
      
      dockerfile:
        description: 'Path to the Dockerfile'
        type: string
        required: false
        default: './apps/server/Dockerfile'
      
      context:
        description: 'Docker build context'
        type: string
        required: false
        default: '.'
      
      image-name:
        description: 'The base name of the Docker image'
        type: string
        required: false
        default: ''
      
      tag-version:
        description: 'Version to use for tagging (without v prefix)'
        type: string
        required: false
        default: ''
      
      is-develop:
        description: 'Whether this is a develop branch build'
        type: boolean
        required: false
        default: false
      
      is-release:
        description: 'Whether this is a release tag build'
        type: boolean
        required: false
        default: false
      
      include-latest:
        description: 'Whether to include the latest tag'
        type: boolean
        required: false
        default: false
    
    outputs:
      tags:
        description: 'Generated Docker tags'
        value: ${{ jobs.build-and-push.outputs.tags }}

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker-metadata.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set default image name if not provided
        id: set-image-name
        shell: bash
        run: |
          if [[ -z "${{ inputs.image-name }}" ]]; then
            echo "IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/react-router-nest-server" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_NAME=${{ inputs.image-name }}" >> $GITHUB_OUTPUT
          fi

      - name: Generate Docker tags and labels
        id: docker-metadata
        uses: ./.github/actions/docker-metadata
        with:
          image-name: ${{ steps.set-image-name.outputs.IMAGE_NAME }}
          tag-version: ${{ inputs.tag-version }}
          is-develop: ${{ inputs.is-develop }}
          is-release: ${{ inputs.is-release }}
          include-latest: ${{ inputs.include-latest }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
